给你一个字符串 s 和一个机器人，机器人当前有一个空字符串 t 。执行以下操作之一，直到 s 和 t 都变成空字符串：

删除字符串 s 的 第一个 字符，并将该字符给机器人。机器人把这个字符添加到 t 的尾部。
删除字符串 t 的 最后一个 字符，并将该字符给机器人。机器人将该字符写到纸上。
请你返回纸上能写出的字典序最小的字符串。

## 
1. 首先得搞明白什么是字典序
2. 贪心算法
求 出栈序列的最小字典序(我也想到了这一步, 但是不会实现...)
- 首先将题目描述转化: 有一个初始为空的栈, 给定字符的入栈顺序, 求字典序最小的出栈序列
- 当字符入栈后, 持续检查栈顶元素c.假设还没入栈的字符中字典序最小的字符是m, 那么就有以下两种情况:
1. c≤m: 此时弹出c最优, 因为还没入栈的字符字典序最小值都比栈顶元素要大, 不能让它们入栈
2. c>m: 此时不弹出c, 等待后续字典序更小的字符入栈
当所有的字符都入栈后, 栈内的剩余字符按顺序弹出即可
```C++
class Solution{
public:
    string robotWithString(string s){
        int n = s.size();
        vector<char> f(n+1);
        f[n]='z'+1;
        for (int i = n-1; i>=0;i--){
            f[i]=min(f[i+1], s[i]);
        }
        string ans;
        stack<char> stk;
        for (int i = 0; i<n;i++){
            stk.push(s[i]);
            while (!stk.empty()&&stk.top()<=f[i+1]) ans.push_back(stk.top()), stk.pop();
        }
        return ans;
    }
}
```